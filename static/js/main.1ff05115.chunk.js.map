{"version":3,"sources":["utils/wikidata.js","utils/queryParser.js","slider.js","App.js","utils/queries.js","reportWebVitals.js","index.js"],"names":["wdk","WBK","instance","sparqlEndpoint","executeQuery","query","a","sparqlQuery","split","url","body","axios","post","result","data","execute","setGlobeLabels","setCurrentQuery","bindings","results","globeLabels","parseCountriesIntoObjects","console","warn","arr","obj","longitude","cords","value","replace","latitude","push","properties","name","countryLabel","label","itemLabel","placeName","placeLabel","pop_max","population","StyledSlider","styled","ReactSlider","StyledThumb","div","Thumb","props","state","valueNow","StyledTrack","index","Track","typography","Typography","funstonTheme","injectStyles","injectFonts","styles","splitScreen","display","flexDirection","alignItems","justifyContnent","leftPane","width","rightPane","App","React","useState","currentQuery","counter_booksQuery","setCounter_booksQuery","counter_maxBillQuery","setCounter_maxBillQuery","className","style","color","onClick","block","min","max","defaultValue","renderTrack","renderThumb","onChange","val","concat","globeImageUrl","backgroundImageUrl","height","labelsData","labelLat","d","labelLng","labelText","labelSize","Math","sqrt","labelDotRadius","labelColor","labelResolution","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ff05115.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport WBK from 'wikibase-sdk';\r\n\r\nconst wdk = WBK({\r\n    instance: 'https://www.wikidata.org',\r\n    sparqlEndpoint: 'https://query.wikidata.org/sparql',\r\n});\r\n\r\nexport const searchEntities = async (search, language) => {\r\n    const url = wdk.searchEntities({ search, language });\r\n    const result = await axios.get(url);\r\n    return result.data.search;\r\n};\r\n\r\nexport const executeQuery = async (query) => {\r\n    const [url, body] = wdk.sparqlQuery(query).split('?');\r\n    const result = await axios.post(url, body);\r\n    return result.data;\r\n};\r\n","import {executeQuery} from './wikidata';\r\n\r\nexport async function execute(setGlobeLabels, setCurrentQuery, query) {\r\n  setCurrentQuery(query);\r\n  const data = await executeQuery(query);\r\n  const bindings = data.results.bindings;\r\n  const globeLabels = parseCountriesIntoObjects(bindings);\r\n  console.warn(globeLabels);\r\n  setGlobeLabels(globeLabels);\r\n}\r\n\r\nfunction parseCountriesIntoObjects(bindings) {\r\n  const arr = [];\r\n  for (const obj of bindings) {\r\n    const longitude = obj?.cords?.value?.replace( /[^\\d. -]*/g, '').split(\" \")[0];\r\n    const latitude = obj?.cords?.value?.replace( /[^\\d. -]*/g, '').split(\" \")[1];\r\n    arr.push({\r\n      properties: {\r\n        longitude,\r\n        latitude,\r\n        name: obj?.countryLabel?.value  || obj?.label?.value || `${obj?.itemLabel?.value} - ${obj?.placeName?.value || obj?.placeLabel?.value}`,\r\n        pop_max: obj?.population?.value || 1000000,\r\n      }\r\n    })\r\n  }\r\n  return arr;\r\n}\r\n","import styled from 'styled-components';\r\nimport ReactSlider from 'react-slider'\r\n\r\nexport const StyledSlider = styled(ReactSlider)`\r\n    width: 500px;\r\n    height: 35px;\r\n`;\r\n\r\nconst StyledThumb = styled.div`\r\n    height: 35px;\r\n    line-height: 35px;\r\n    width: 100px;\r\n    text-align: center;\r\n    background-color: #000;\r\n    color: #fff;\r\n    border-radius: 20%;\r\n    cursor: grab;\r\n`;\r\n\r\nexport const Thumb = (props, state) => <StyledThumb {...props}>{state.valueNow}</StyledThumb>;\r\n\r\nconst StyledTrack = styled.div`\r\n    top: 0;\r\n    bottom: 0;\r\n    background: ${props => props.index === 0 ? '#0f0' : '#ddd'};\r\n    border-radius: 999px;\r\n`;\r\n\r\nexport const Track = (props, state) => <StyledTrack {...props} index={state.index} />;\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Globe from 'react-globe.gl';\r\nimport {countriesQuery, antoineQuery, booksQuery, maxBillQuery, airAccidentsQuery} from './utils/queries';\r\nimport {execute} from './utils/queryParser';\r\nimport {StyledSlider, Thumb, Track} from './slider';\r\n\r\nimport Typography from 'typography'\r\nimport funstonTheme from 'typography-theme-funston'\r\nimport injectFonts from 'typography-inject-fonts'\r\n\r\nconst typography = new Typography(funstonTheme)\r\ntypography.injectStyles()\r\ninjectFonts(typography)\r\n\r\nfunction App() {\r\n  const [globeLabels, setGlobeLabels] = React.useState([]);\r\n  const [currentQuery, setCurrentQuery] = React.useState('');\r\n  const [counter_booksQuery, setCounter_booksQuery] = React.useState(1000);\r\n  const [counter_maxBillQuery, setCounter_maxBillQuery] = React.useState(1000);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div style={styles.splitScreen}>\r\n          <div style={styles.leftPane}>\r\n            <p>{currentQuery}</p>\r\n            <button color='primary' onClick={() => execute(setGlobeLabels, setCurrentQuery, countriesQuery)} block>Show populations of the World</button>\r\n            <button color='primary' onClick={() => execute(setGlobeLabels, setCurrentQuery, antoineQuery)} block>Show birthplace of people with name Antoine</button>\r\n            <button color='primary' onClick={() => execute(setGlobeLabels, setCurrentQuery, airAccidentsQuery)} block>Show air accidents query</button>\r\n            <br></br>\r\n            <br></br>\r\n            <center>\r\n              Year of books less than:\r\n            <StyledSlider\r\n                min={0}\r\n                max={2021}\r\n                defaultValue={counter_booksQuery}\r\n                renderTrack={Track}\r\n                renderThumb={Thumb}\r\n                onChange={val => setCounter_booksQuery(val)}\r\n                />\r\n            </center>\r\n            <button color='primary' onClick={() => execute(setGlobeLabels, setCurrentQuery, booksQuery(counter_booksQuery))} block>Show books query</button>\r\n            <br></br>\r\n            <br></br>\r\n            <center>\r\n              Year of Max Bill's works grater than:\r\n            <StyledSlider\r\n                min={1}\r\n                max={2021}\r\n                defaultValue={counter_maxBillQuery}\r\n                renderTrack={Track}\r\n                renderThumb={Thumb}\r\n                onChange={val => setCounter_maxBillQuery(val)}\r\n            />\r\n            </center>\r\n            <button color='primary' onClick={() => execute(setGlobeLabels, setCurrentQuery, maxBillQuery(counter_maxBillQuery))} block>Show max bill query</button>\r\n          </div>\r\n          <div style={styles.rightPane}>\r\n            <Globe\r\n              globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\r\n              backgroundImageUrl=\"//unpkg.com/three-globe/example/img/night-sky.png\"\r\n              width={1000} height={1000}\r\n              labelsData={globeLabels}\r\n              labelLat={d => d.properties.latitude}\r\n              labelLng={d => d.properties.longitude}\r\n              labelText={d => d.properties.name}\r\n              labelSize={d => Math.sqrt(d.properties.pop_max) * 0.0001}\r\n              labelDotRadius={d => Math.sqrt(d.properties.pop_max) * 0.00005}\r\n              labelColor={() => 'rgba(255, 165, 0, 0.75)'}\r\n              labelResolution={2}\r\n              />\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  splitScreen: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContnent: 'center'\r\n  },\r\n  leftPane: {\r\n      width: '50%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n  },\r\n  rightPane: {\r\n      width: '50%',\r\n  },\r\n};\r\n\r\nexport default App;","export const countriesQuery =\r\n    `\r\nSELECT DISTINCT ?countryLabel ?population ?cords\r\n{\r\n  ?country wdt:P31 wd:Q6256 ;\r\n           wdt:P1082 ?population ;\r\n           wdt:P625 ?cords.\r\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\r\n}\r\nGROUP BY ?population ?countryLabel ?cords\r\nORDER BY DESC(?population)\r\n`;\r\n\r\nexport const antoineQuery =\r\n    `\r\nSELECT ?itemLabel ?cords ?placeName\r\nWHERE\r\n{\r\n  ?item wdt:P31 wd:Q5 .   # human\r\n  ?item wdt:P735 wd:Q15235674.\r\n  ?item wdt:P19 ?place.\r\n  ?place wdt:P1448 ?placeName.\r\n  ?place wdt:P625 ?cords.\r\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"fr\". }\r\n}\r\nLIMIT 250`;\r\n\r\nexport const airAccidentsQuery =\r\n    `\r\nSELECT ?label ?cords ?place\r\nWHERE\r\n{\r\n   ?subj wdt:P31 wd:Q744913  .\r\n   ?subj wdt:P625 ?cords .\r\n   ?subj rdfs:label ?label filter (lang(?label) = \"en\")\r\n}\r\nLIMIT 250`\r\n\r\n\r\nexport function booksQuery(year) {\r\n  return (\r\n    `\r\n    SELECT ?label ?cords\r\n    WHERE\r\n    {\r\n      VALUES ?type {wd:Q571 wd:Q7725634}  # book or literary work\r\n      ?item wdt:P31 ?type .\r\n      ?item wdt:P577 ?date FILTER (?date < \"`.concat(year).concat(`-01-01T00:00:00Z\"^^xsd:dateTime) .\r\n      ?item rdfs:label ?label filter (lang(?label) = \"en\")\r\n\r\n      OPTIONAL {\r\n        ?item (wdt:P291|wdt:P840) ?place .  # publication or narration place is ?place\r\n        ?place wdt:P625 ?cords\r\n      }\r\n    }\r\n    LIMIT 250`)\r\n  )\r\n}\r\n\r\n\r\nexport function maxBillQuery(year) {\r\n  return (\r\n    `\r\n    SELECT DISTINCT ?itemLabel ?countryLabel ?placeLabel (YEAR(?date) as ?year) ?cords\r\n    WHERE\r\n    {\r\n      ?item wdt:P31/wdt:P279* wd:Q860861 .\r\n      ?item wdt:P170 wd:Q123454 .\r\n      OPTIONAL { ?item wdt:P17 ?country . }\r\n      OPTIONAL { ?item wdt:P131 ?place . }\r\n      ?item wdt:P571 ?date FILTER (?date > \"`.concat(year).concat(`-01-01T00:00:00Z\"^^xsd:dateTime) .\r\n      OPTIONAL { ?item wdt:P625 ?cords . }\r\n      OPTIONAL { ?item wdt:P18 ?image . }\r\n      SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }\r\n    }\r\n    ORDER BY ?itemLabel ?placeLabel\r\n    `)\r\n  )\r\n}\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}